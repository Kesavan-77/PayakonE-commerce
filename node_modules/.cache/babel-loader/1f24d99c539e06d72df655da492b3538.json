{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport { extractEventHandlers } from './extractEventHandlers';\nimport { omitEventHandlers } from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\n\nexport function mergeSlotProps(parameters) {\n  var getSlotProps = parameters.getSlotProps,\n      additionalProps = parameters.additionalProps,\n      externalSlotProps = parameters.externalSlotProps,\n      externalForwardedProps = parameters.externalForwardedProps,\n      className = parameters.className;\n\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    var _joinedClasses = clsx(additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n\n    var _mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n\n    var _props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n\n    if (_joinedClasses.length > 0) {\n      _props.className = _joinedClasses;\n    }\n\n    if (Object.keys(_mergedStyle).length > 0) {\n      _props.style = _mergedStyle;\n    }\n\n    return {\n      props: _props,\n      internalRef: undefined\n    };\n  } // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n\n  var eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  var componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  var otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  var internalSlotProps = getSlotProps(eventHandlers); // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n\n  var joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n\n  var mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n\n  var props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n\n  return {\n    props: props,\n    internalRef: internalSlotProps.ref\n  };\n}","map":{"version":3,"names":["_extends","clsx","extractEventHandlers","omitEventHandlers","mergeSlotProps","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","mergedStyle","style","props","length","Object","keys","internalRef","undefined","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/base/utils/mergeSlotProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport { extractEventHandlers } from './extractEventHandlers';\nimport { omitEventHandlers } from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}