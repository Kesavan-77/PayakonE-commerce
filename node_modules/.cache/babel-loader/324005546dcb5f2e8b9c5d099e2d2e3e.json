{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useBadge } from '../useBadge';\nimport { getBadgeUtilityClass } from './badgeClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getBadgeUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/)\n *\n * API:\n *\n * - [Badge API](https://mui.com/base-ui/react-badge/components-api/#badge)\n */\n\n\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, forwardedRef) {\n  var _slots$root, _slots$badge;\n\n  const {\n    children,\n    max: maxProp = 99,\n    slotProps = {},\n    slots = {},\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const BadgeComponent = (_slots$badge = slots.badge) != null ? _slots$badge : 'span';\n  const badgeProps = useSlotProps({\n    elementType: BadgeComponent,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeComponent, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Badge };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_composeClasses","composeClasses","useBadge","getBadgeUtilityClass","useSlotProps","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","Badge","forwardRef","props","forwardedRef","_slots$root","_slots$badge","children","max","maxProp","slotProps","showZero","other","badgeContent","displayValue","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","BadgeComponent","badgeProps","process","env","NODE_ENV","propTypes","node","bool","number","shape","oneOfType","func","object"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/base/Badge/Badge.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useBadge } from '../useBadge';\nimport { getBadgeUtilityClass } from './badgeClasses';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getBadgeUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/)\n *\n * API:\n *\n * - [Badge API](https://mui.com/base-ui/react-badge/components-api/#badge)\n */\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, forwardedRef) {\n  var _slots$root, _slots$badge;\n  const {\n      children,\n      max: maxProp = 99,\n      slotProps = {},\n      slots = {},\n      showZero = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const BadgeComponent = (_slots$badge = slots.badge) != null ? _slots$badge : 'span';\n  const badgeProps = useSlotProps({\n    elementType: BadgeComponent,\n    externalSlotProps: slotProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeComponent, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Badge };"],"mappings":"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"},"metadata":{},"sourceType":"module"}