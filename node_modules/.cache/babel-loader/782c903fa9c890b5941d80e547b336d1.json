{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nvar UNINITIALIZED = {};\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\n\nexport default function useLazyRef(init, initArg) {\n  var ref = React.useRef(UNINITIALIZED);\n\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n\n  return ref;\n}","map":{"version":3,"names":["React","UNINITIALIZED","useLazyRef","init","initArg","ref","useRef","current"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,IAAMC,aAAa,GAAG,EAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;EAChD,IAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAaL,aAAb,CAAZ;;EACA,IAAII,GAAG,CAACE,OAAJ,KAAgBN,aAApB,EAAmC;IACjCI,GAAG,CAACE,OAAJ,GAAcJ,IAAI,CAACC,OAAD,CAAlB;EACD;;EACD,OAAOC,GAAP;AACD"},"metadata":{},"sourceType":"module"}