{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n\nvar _span;\n\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"error\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SelectSelect = styled('div', {\n  name: 'MuiSelect',\n  slot: 'Select',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [// Win specificity over the input base\n    {\n      [`&.${selectClasses.select}`]: styles.select\n    }, {\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${selectClasses.error}`]: styles.error\n    }, {\n      [`&.${selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${selectClasses.select}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = styled('svg', {\n  name: 'MuiSelect',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styled('input', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\n  name: 'MuiSelect',\n  slot: 'NativeInput',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open,\n    error\n  } = ownerState;\n  const slots = {\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple', error && 'error'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  var _MenuProps$slotProps;\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    className,\n    defaultOpen,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    error = false,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp // catching `type` from Input which makes no sense for SelectInput\n    ,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: defaultOpen,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]); // Resize menu on `defaultOpen` automatic toggle.\n\n  React.useEffect(() => {\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      displayRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [displayNode, autoWidth]); // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\n\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    if (!labelId) {\n      return undefined;\n    }\n\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const child = childrenArray.find(childItem => childItem.props.value === event.target.value);\n\n    if (child === undefined) {\n      return;\n    }\n\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue; // We use the tabindex attribute to signal the available options.\n\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on macOS, but it's recommended by\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && openState;\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : 'false',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    if (multiple) {\n      if (displayMultiple.length === 0) {\n        display = null;\n      } else {\n        display = displayMultiple.reduce((output, child, index) => {\n          output.push(child);\n\n          if (index < displayMultiple.length - 1) {\n            output.push(', ');\n          }\n\n          return output;\n        }, []);\n      }\n    } else {\n      display = displaySingle;\n    }\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = anchorElement.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n\n  const ownerState = _extends({}, props, {\n    variant,\n    value,\n    open,\n    error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const paperProps = _extends({}, MenuProps.PaperProps, (_MenuProps$slotProps = MenuProps.slotProps) == null ? void 0 : _MenuProps$slotProps.paper);\n\n  const listboxId = useId();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"combobox\",\n      \"aria-controls\": listboxId,\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx(SelectDisplayProps.className, classes.select, className) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ? // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      })) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      \"aria-invalid\": error,\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: anchorElement,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      }\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        'aria-multiselectable': multiple ? 'true' : undefined,\n        disableListWrap: true,\n        id: listboxId\n      }, MenuProps.MenuListProps),\n      slotProps: _extends({}, MenuProps.slotProps, {\n        paper: _extends({}, paperProps, {\n          style: _extends({\n            minWidth: menuMinWidth\n          }, paperProps != null ? paperProps.style : null)\n        })\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * If `true`, the `select input` will indicate an error.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/material-ui/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_formatMuiErrorMessage","_span","_excluded","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","refType","unstable_useId","useId","ownerDocument","capitalize","Menu","nativeSelectSelectStyles","nativeSelectIconStyles","isFilled","styled","slotShouldForwardProp","useForkRef","useControlled","selectClasses","getSelectUtilityClasses","jsx","_jsx","jsxs","_jsxs","SelectSelect","name","slot","overridesResolver","props","styles","ownerState","select","variant","error","multiple","height","minHeight","textOverflow","whiteSpace","overflow","SelectIcon","icon","open","iconOpen","SelectNativeInput","shouldForwardProp","prop","nativeInput","bottom","left","position","opacity","pointerEvents","width","boxSizing","areEqualValues","a","b","String","isEmpty","display","trim","useUtilityClasses","classes","disabled","slots","SelectInput","forwardRef","ref","_MenuProps$slotProps","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","className","defaultOpen","defaultValue","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","onBlur","onChange","onClose","onFocus","onOpen","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","other","setValueState","controlled","default","openState","setOpenState","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","handleRef","handleDisplayRef","useCallback","node","anchorElement","parentNode","useImperativeHandle","focus","useEffect","clientWidth","undefined","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","update","event","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","child","find","childItem","target","handleItemClick","newValue","currentTarget","hasAttribute","Array","isArray","slice","itemIndex","indexOf","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","displaySingle","displayMultiple","computeDisplay","foundMatch","items","map","isValidElement","process","env","NODE_ENV","console","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","length","reduce","output","index","menuMinWidth","buttonId","id","paperProps","PaperProps","slotProps","paper","listboxId","Fragment","Boolean","onKeyDown","onMouseDown","as","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","disableListWrap","style","minWidth","propTypes","string","bool","object","any","elementType","isRequired","func","oneOfType","number","oneOf"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/material/Select/SelectInput.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nvar _span;\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultOpen\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"error\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SelectSelect = styled('div', {\n  name: 'MuiSelect',\n  slot: 'Select',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [\n    // Win specificity over the input base\n    {\n      [`&.${selectClasses.select}`]: styles.select\n    }, {\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${selectClasses.error}`]: styles.error\n    }, {\n      [`&.${selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${selectClasses.select}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = styled('svg', {\n  name: 'MuiSelect',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styled('input', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\n  name: 'MuiSelect',\n  slot: 'NativeInput',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open,\n    error\n  } = ownerState;\n  const slots = {\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple', error && 'error'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n\n/**\n * @ignore - internal component.\n */\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  var _MenuProps$slotProps;\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-label': ariaLabel,\n      autoFocus,\n      autoWidth,\n      children,\n      className,\n      defaultOpen,\n      defaultValue,\n      disabled,\n      displayEmpty,\n      error = false,\n      IconComponent,\n      inputRef: inputRefProp,\n      labelId,\n      MenuProps = {},\n      multiple,\n      name,\n      onBlur,\n      onChange,\n      onClose,\n      onFocus,\n      onOpen,\n      open: openProp,\n      readOnly,\n      renderValue,\n      SelectDisplayProps = {},\n      tabIndex: tabIndexProp\n      // catching `type` from Input which makes no sense for SelectInput\n      ,\n\n      value: valueProp,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: defaultOpen,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  const anchorElement = displayNode == null ? void 0 : displayNode.parentNode;\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n\n  // Resize menu on `defaultOpen` automatic toggle.\n  React.useEffect(() => {\n    if (defaultOpen && openState && displayNode && !isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      displayRef.current.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [displayNode, autoWidth]);\n  // `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.\n  // `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    if (!labelId) {\n      return undefined;\n    }\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n    return undefined;\n  }, [labelId]);\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : anchorElement.clientWidth);\n      setOpenState(open);\n    }\n  };\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    }\n    // Hijack the default focus behavior.\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n  const handleClose = event => {\n    update(false, event);\n  };\n  const childrenArray = React.Children.toArray(children);\n\n  // Support autofill.\n  const handleChange = event => {\n    const child = childrenArray.find(childItem => childItem.props.value === event.target.value);\n    if (child === undefined) {\n      return;\n    }\n    setValueState(child.props.value);\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n  const handleItemClick = child => event => {\n    let newValue;\n\n    // We use the tabindex attribute to signal the available options.\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n    if (value !== newValue) {\n      setValueState(newValue);\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown',\n      // The native select doesn't respond to enter on macOS, but it's recommended by\n      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\n      'Enter'];\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n  const open = displayNode !== null && openState;\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false;\n\n  // No need to display any value if the field is empty.\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    let selected;\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n      selected = value.some(v => areEqualValues(v, child.props.value));\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n    if (selected) {\n      foundMatch = true;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : 'false',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n    });\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n  if (computeDisplay) {\n    if (multiple) {\n      if (displayMultiple.length === 0) {\n        display = null;\n      } else {\n        display = displayMultiple.reduce((output, child, index) => {\n          output.push(child);\n          if (index < displayMultiple.length - 1) {\n            output.push(', ');\n          }\n          return output;\n        }, []);\n      }\n    } else {\n      display = displaySingle;\n    }\n  }\n\n  // Avoid performing a layout computation in the render method.\n  let menuMinWidth = menuMinWidthState;\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = anchorElement.clientWidth;\n  }\n  let tabIndex;\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  const ownerState = _extends({}, props, {\n    variant,\n    value,\n    open,\n    error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const paperProps = _extends({}, MenuProps.PaperProps, (_MenuProps$slotProps = MenuProps.slotProps) == null ? void 0 : _MenuProps$slotProps.paper);\n  const listboxId = useId();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"combobox\",\n      \"aria-controls\": listboxId,\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx(SelectDisplayProps.className, classes.select, className)\n      // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ? // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      })) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      \"aria-invalid\": error,\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: anchorElement,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      }\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        'aria-multiselectable': multiple ? 'true' : undefined,\n        disableListWrap: true,\n        id: listboxId\n      }, MenuProps.MenuListProps),\n      slotProps: _extends({}, MenuProps.slotProps, {\n        paper: _extends({}, paperProps, {\n          style: _extends({\n            minWidth: menuMinWidth\n          }, paperProps != null ? paperProps.style : null)\n        })\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.\n   * You can only use it when the `native` prop is `false` (default).\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n  /**\n   * If `true`, the `select input` will indicate an error.\n   */\n  error: PropTypes.bool,\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n  /**\n   * Props applied to the [`Menu`](/material-ui/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}