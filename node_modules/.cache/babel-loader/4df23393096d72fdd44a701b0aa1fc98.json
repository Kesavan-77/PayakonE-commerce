{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n    _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n    _excluded3 = [\"component\"];\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\n\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  var className = parameters.className,\n      initialElementType = parameters.elementType,\n      ownerState = parameters.ownerState,\n      externalForwardedProps = parameters.externalForwardedProps,\n      getSlotOwnerState = parameters.getSlotOwnerState,\n      internalForwardedProps = parameters.internalForwardedProps,\n      useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n\n  var rootComponent = externalForwardedProps.component,\n      _externalForwardedPro = externalForwardedProps.slots,\n      slots = _externalForwardedPro === void 0 ? _defineProperty({}, name, undefined) : _externalForwardedPro,\n      _externalForwardedPro2 = externalForwardedProps.slotProps,\n      slotProps = _externalForwardedPro2 === void 0 ? _defineProperty({}, name, undefined) : _externalForwardedPro2,\n      other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n\n  var elementType = slots[name] || initialElementType; // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n\n  var resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n\n  var _mergeSlotProps = mergeSlotProps(_extends({\n    className: className\n  }, useSlotPropsParams, {\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  })),\n      slotComponent = _mergeSlotProps.props.component,\n      internalRef = _mergeSlotProps.internalRef,\n      mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n\n  var ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  var slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n\n  var finalOwnerState = _extends({}, ownerState, slotOwnerState);\n\n  var LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  var props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref: ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(function (propName) {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","unstable_useForkRef","useForkRef","appendOwnerState","resolveComponentProps","mergeSlotProps","useSlot","name","parameters","className","initialElementType","elementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","component","slots","undefined","slotProps","other","resolvedComponentsProps","_mergeSlotProps","externalSlotProps","slotComponent","props","internalRef","mergedProps","ref","slotOwnerState","finalOwnerState","LeafComponent","as","Object","keys","forEach","propName"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}