{"ast":null,"code":"import _defineProperty from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport var assignNestedKeys = function assignNestedKeys(obj, keys, value) {\n  var arrayKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var temp = obj;\n  keys.forEach(function (k, index) {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport var walkObjectDeep = function walkObjectDeep(obj, callback, shouldSkipPaths) {\n  function recurse(object) {\n    var parentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var arrayKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    Object.entries(object).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([].concat(_toConsumableArray(parentKeys), [key]))) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [].concat(_toConsumableArray(parentKeys), [key]), Array.isArray(value) ? [].concat(_toConsumableArray(arrayKeys), [key]) : arrayKeys);\n          } else {\n            callback([].concat(_toConsumableArray(parentKeys), [key]), value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nvar getCssValue = function getCssValue(keys, value) {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(function (prop) {\n      return keys.includes(prop);\n    })) {\n      // CSS property that are unitless\n      return value;\n    }\n\n    var lastKey = keys[keys.length - 1];\n\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n\n    return \"\".concat(value, \"px\");\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\n\n\nexport default function cssVarsParser(theme, options) {\n  var _ref3 = options || {},\n      prefix = _ref3.prefix,\n      shouldSkipGeneratingVar = _ref3.shouldSkipGeneratingVar;\n\n  var css = {};\n  var vars = {};\n  var varsWithDefaults = {};\n  walkObjectDeep(theme, function (keys, value, arrayKeys) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        var cssVar = \"--\".concat(prefix ? \"\".concat(prefix, \"-\") : '').concat(keys.join('-'));\n        Object.assign(css, _defineProperty({}, cssVar, getCssValue(keys, value)));\n        assignNestedKeys(vars, keys, \"var(\".concat(cssVar, \")\"), arrayKeys);\n        assignNestedKeys(varsWithDefaults, keys, \"var(\".concat(cssVar, \", \").concat(value, \")\"), arrayKeys);\n      }\n    }\n  }, function (keys) {\n    return keys[0] === 'vars';\n  } // skip 'vars/*' paths\n  );\n  return {\n    css: css,\n    vars: vars,\n    varsWithDefaults: varsWithDefaults\n  };\n}","map":{"version":3,"names":["assignNestedKeys","obj","keys","value","arrayKeys","temp","forEach","k","index","length","Array","isArray","Number","includes","walkObjectDeep","callback","shouldSkipPaths","recurse","object","parentKeys","Object","entries","key","undefined","getCssValue","some","prop","lastKey","toLowerCase","indexOf","cssVarsParser","theme","options","prefix","shouldSkipGeneratingVar","css","vars","varsWithDefaults","cssVar","join","assign"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/system/esm/cssVars/cssVarsParser.js"],"sourcesContent":["/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value, arrayKeys = []) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = [], arrayKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const varsWithDefaults = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n        assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars,\n    varsWithDefaults\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}