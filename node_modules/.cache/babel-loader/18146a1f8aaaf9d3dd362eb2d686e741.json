{"ast":null,"code":"'use client';\n/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef, unstable_useForkRef as useForkRef, unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\"; // Inspired by https://github.com/focus-trap/tabbable\n\nvar candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'].join(',');\n\nfunction getTabIndex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex') || '', 10);\n\n  if (!Number.isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  } // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n\n\n  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n\n  return node.tabIndex;\n}\n\nfunction isNonTabbableRadio(node) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio') {\n    return false;\n  }\n\n  if (!node.name) {\n    return false;\n  }\n\n  var getRadio = function getRadio(selector) {\n    return node.ownerDocument.querySelector(\"input[type=\\\"radio\\\"]\".concat(selector));\n  };\n\n  var roving = getRadio(\"[name=\\\"\".concat(node.name, \"\\\"]:checked\"));\n\n  if (!roving) {\n    roving = getRadio(\"[name=\\\"\".concat(node.name, \"\\\"]\"));\n  }\n\n  return roving !== node;\n}\n\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction defaultGetTabbable(root) {\n  var regularTabNodes = [];\n  var orderedTabNodes = [];\n  Array.from(root.querySelectorAll(candidatesSelector)).forEach(function (node, i) {\n    var nodeTabIndex = getTabIndex(node);\n\n    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {\n      return;\n    }\n\n    if (nodeTabIndex === 0) {\n      regularTabNodes.push(node);\n    } else {\n      orderedTabNodes.push({\n        documentOrder: i,\n        tabIndex: nodeTabIndex,\n        node: node\n      });\n    }\n  });\n  return orderedTabNodes.sort(function (a, b) {\n    return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n  }).map(function (a) {\n    return a.node;\n  }).concat(regularTabNodes);\n}\n\nfunction defaultIsEnabled() {\n  return true;\n}\n/**\n * Utility component that locks focus inside the component.\n *\n * Demos:\n *\n * - [Focus Trap](https://mui.com/base-ui/react-focus-trap/)\n *\n * API:\n *\n * - [FocusTrap API](https://mui.com/base-ui/react-focus-trap/components-api/#focus-trap)\n */\n\n\nfunction FocusTrap(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$getTabbable = props.getTabbable,\n      getTabbable = _props$getTabbable === void 0 ? defaultGetTabbable : _props$getTabbable,\n      _props$isEnabled = props.isEnabled,\n      isEnabled = _props$isEnabled === void 0 ? defaultIsEnabled : _props$isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef(false);\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef(null);\n  var reactFocusEventTarget = React.useRef(null); // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n\n  var activated = React.useRef(false);\n  var rootRef = React.useRef(null); // @ts-expect-error TODO upstream fix\n\n  var handleRef = useForkRef(children.ref, rootRef);\n  var lastKeydown = React.useRef(null);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current);\n\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['MUI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', '-1');\n      }\n\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n\n    return function () {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    }; // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open FocusTrap\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(function () {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current);\n\n    var loopFocus = function loopFocus(nativeEvent) {\n      lastKeydown.current = nativeEvent;\n\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      } // Make sure the next tab starts from the right place.\n      // doc.activeElement refers to the origin.\n\n\n      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (sentinelEnd.current) {\n          sentinelEnd.current.focus();\n        }\n      }\n    };\n\n    var contain = function contain() {\n      var rootElement = rootRef.current; // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n\n      if (rootElement === null) {\n        return;\n      }\n\n      if (!doc.hasFocus() || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      } // The focus is already inside\n\n\n      if (rootElement.contains(doc.activeElement)) {\n        return;\n      } // The disableEnforceFocus is set and the focus is outside of the focus trap (and sentinel nodes)\n\n\n      if (disableEnforceFocus && doc.activeElement !== sentinelStart.current && doc.activeElement !== sentinelEnd.current) {\n        return;\n      } // if the focus event is not coming from inside the children's react tree, reset the refs\n\n\n      if (doc.activeElement !== reactFocusEventTarget.current) {\n        reactFocusEventTarget.current = null;\n      } else if (reactFocusEventTarget.current !== null) {\n        return;\n      }\n\n      if (!activated.current) {\n        return;\n      }\n\n      var tabbable = [];\n\n      if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {\n        tabbable = getTabbable(rootRef.current);\n      } // one of the sentinel nodes was focused, so move the focus\n      // to the first/last tabbable element inside the focus trap\n\n\n      if (tabbable.length > 0) {\n        var _lastKeydown$current, _lastKeydown$current2;\n\n        var isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');\n        var focusNext = tabbable[0];\n        var focusPrevious = tabbable[tabbable.length - 1];\n\n        if (typeof focusNext !== 'string' && typeof focusPrevious !== 'string') {\n          if (isShiftTab) {\n            focusPrevious.focus();\n          } else {\n            focusNext.focus();\n          }\n        } // no tabbable elements in the trap focus or the focus was outside of the focus trap\n\n      } else {\n        rootElement.focus();\n      }\n    };\n\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      if (doc.activeElement && doc.activeElement.tagName === 'BODY') {\n        contain();\n      }\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);\n\n  var onFocus = function onFocus(event) {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    var childrenPropsHandler = children.props.onFocus;\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  var handleFocusSentinel = function handleFocusSentinel(event) {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n\n    activated.current = true;\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelStart,\n      \"data-testid\": \"sentinelStart\"\n    }), /*#__PURE__*/React.cloneElement(children, {\n      ref: handleRef,\n      onFocus: onFocus\n    }), /*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelEnd,\n      \"data-testid\": \"sentinelEnd\"\n    })]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? FocusTrap.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the focus trap will not restore focus to previously focused element once\n   * focus trap is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.\n   * For instance, you can provide the \"tabbable\" npm dependency.\n   * @param {HTMLElement} root\n   */\n  getTabbable: PropTypes.func,\n\n  /**\n   * This prop extends the `open` prop.\n   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.\n   * This prop should be memoized.\n   * It can be used to support multiple focus trap mounted at the same time.\n   * @default function defaultIsEnabled(): boolean {\n   *   return true;\n   * }\n   */\n  isEnabled: PropTypes.func,\n\n  /**\n   * If `true`, focus is locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  FocusTrap['propTypes' + ''] = exactProp(FocusTrap.propTypes);\n}\n\nexport { FocusTrap };","map":{"version":3,"names":["React","PropTypes","exactProp","elementAcceptingRef","unstable_useForkRef","useForkRef","unstable_ownerDocument","ownerDocument","jsx","_jsx","jsxs","_jsxs","candidatesSelector","join","getTabIndex","node","tabindexAttr","parseInt","getAttribute","Number","isNaN","contentEditable","nodeName","tabIndex","isNonTabbableRadio","tagName","type","name","getRadio","selector","querySelector","roving","isNodeMatchingSelectorFocusable","disabled","defaultGetTabbable","root","regularTabNodes","orderedTabNodes","Array","from","querySelectorAll","forEach","i","nodeTabIndex","push","documentOrder","sort","a","b","map","concat","defaultIsEnabled","FocusTrap","props","children","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","getTabbable","isEnabled","open","ignoreNextEnforceFocus","useRef","sentinelStart","sentinelEnd","nodeToRestore","reactFocusEventTarget","activated","rootRef","handleRef","ref","lastKeydown","useEffect","current","doc","contains","activeElement","hasAttribute","process","env","NODE_ENV","console","error","setAttribute","focus","loopFocus","nativeEvent","key","shiftKey","contain","rootElement","hasFocus","tabbable","length","_lastKeydown$current","_lastKeydown$current2","isShiftTab","Boolean","focusNext","focusPrevious","addEventListener","interval","setInterval","clearInterval","removeEventListener","onFocus","event","relatedTarget","target","childrenPropsHandler","handleFocusSentinel","Fragment","cloneElement","propTypes","bool","func","isRequired"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@mui/base/FocusTrap/FocusTrap.js"],"sourcesContent":["'use client';\n\n/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef, unstable_useForkRef as useForkRef, unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// Inspired by https://github.com/focus-trap/tabbable\nconst candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'].join(',');\nfunction getTabIndex(node) {\n  const tabindexAttr = parseInt(node.getAttribute('tabindex') || '', 10);\n  if (!Number.isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  }\n\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n  return node.tabIndex;\n}\nfunction isNonTabbableRadio(node) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio') {\n    return false;\n  }\n  if (!node.name) {\n    return false;\n  }\n  const getRadio = selector => node.ownerDocument.querySelector(`input[type=\"radio\"]${selector}`);\n  let roving = getRadio(`[name=\"${node.name}\"]:checked`);\n  if (!roving) {\n    roving = getRadio(`[name=\"${node.name}\"]`);\n  }\n  return roving !== node;\n}\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {\n    return false;\n  }\n  return true;\n}\nfunction defaultGetTabbable(root) {\n  const regularTabNodes = [];\n  const orderedTabNodes = [];\n  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i) => {\n    const nodeTabIndex = getTabIndex(node);\n    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {\n      return;\n    }\n    if (nodeTabIndex === 0) {\n      regularTabNodes.push(node);\n    } else {\n      orderedTabNodes.push({\n        documentOrder: i,\n        tabIndex: nodeTabIndex,\n        node: node\n      });\n    }\n  });\n  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map(a => a.node).concat(regularTabNodes);\n}\nfunction defaultIsEnabled() {\n  return true;\n}\n\n/**\n * Utility component that locks focus inside the component.\n *\n * Demos:\n *\n * - [Focus Trap](https://mui.com/base-ui/react-focus-trap/)\n *\n * API:\n *\n * - [FocusTrap API](https://mui.com/base-ui/react-focus-trap/components-api/#focus-trap)\n */\nfunction FocusTrap(props) {\n  const {\n    children,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    getTabbable = defaultGetTabbable,\n    isEnabled = defaultIsEnabled,\n    open\n  } = props;\n  const ignoreNextEnforceFocus = React.useRef(false);\n  const sentinelStart = React.useRef(null);\n  const sentinelEnd = React.useRef(null);\n  const nodeToRestore = React.useRef(null);\n  const reactFocusEventTarget = React.useRef(null);\n  // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n  const activated = React.useRef(false);\n  const rootRef = React.useRef(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef(children.ref, rootRef);\n  const lastKeydown = React.useRef(null);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    const doc = ownerDocument(rootRef.current);\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['MUI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n        rootRef.current.setAttribute('tabIndex', '-1');\n      }\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n    return () => {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n        nodeToRestore.current = null;\n      }\n    };\n    // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open FocusTrap\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    const doc = ownerDocument(rootRef.current);\n    const loopFocus = nativeEvent => {\n      lastKeydown.current = nativeEvent;\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      }\n\n      // Make sure the next tab starts from the right place.\n      // doc.activeElement refers to the origin.\n      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n        if (sentinelEnd.current) {\n          sentinelEnd.current.focus();\n        }\n      }\n    };\n    const contain = () => {\n      const rootElement = rootRef.current;\n\n      // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n      if (rootElement === null) {\n        return;\n      }\n      if (!doc.hasFocus() || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      // The focus is already inside\n      if (rootElement.contains(doc.activeElement)) {\n        return;\n      }\n\n      // The disableEnforceFocus is set and the focus is outside of the focus trap (and sentinel nodes)\n      if (disableEnforceFocus && doc.activeElement !== sentinelStart.current && doc.activeElement !== sentinelEnd.current) {\n        return;\n      }\n\n      // if the focus event is not coming from inside the children's react tree, reset the refs\n      if (doc.activeElement !== reactFocusEventTarget.current) {\n        reactFocusEventTarget.current = null;\n      } else if (reactFocusEventTarget.current !== null) {\n        return;\n      }\n      if (!activated.current) {\n        return;\n      }\n      let tabbable = [];\n      if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {\n        tabbable = getTabbable(rootRef.current);\n      }\n\n      // one of the sentinel nodes was focused, so move the focus\n      // to the first/last tabbable element inside the focus trap\n      if (tabbable.length > 0) {\n        var _lastKeydown$current, _lastKeydown$current2;\n        const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');\n        const focusNext = tabbable[0];\n        const focusPrevious = tabbable[tabbable.length - 1];\n        if (typeof focusNext !== 'string' && typeof focusPrevious !== 'string') {\n          if (isShiftTab) {\n            focusPrevious.focus();\n          } else {\n            focusNext.focus();\n          }\n        }\n        // no tabbable elements in the trap focus or the focus was outside of the focus trap\n      } else {\n        rootElement.focus();\n      }\n    };\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true);\n\n    // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n    const interval = setInterval(() => {\n      if (doc.activeElement && doc.activeElement.tagName === 'BODY') {\n        contain();\n      }\n    }, 50);\n    return () => {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);\n  const onFocus = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    const childrenPropsHandler = children.props.onFocus;\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const handleFocusSentinel = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelStart,\n      \"data-testid\": \"sentinelStart\"\n    }), /*#__PURE__*/React.cloneElement(children, {\n      ref: handleRef,\n      onFocus\n    }), /*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelEnd,\n      \"data-testid\": \"sentinelEnd\"\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? FocusTrap.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n  /**\n   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not restore focus to previously focused element once\n   * focus trap is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.\n   * For instance, you can provide the \"tabbable\" npm dependency.\n   * @param {HTMLElement} root\n   */\n  getTabbable: PropTypes.func,\n  /**\n   * This prop extends the `open` prop.\n   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.\n   * This prop should be memoized.\n   * It can be used to support multiple focus trap mounted at the same time.\n   * @default function defaultIsEnabled(): boolean {\n   *   return true;\n   * }\n   */\n  isEnabled: PropTypes.func,\n  /**\n   * If `true`, focus is locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  FocusTrap['propTypes' + ''] = exactProp(FocusTrap.propTypes);\n}\nexport { FocusTrap };"],"mappings":"AAAA;AAEA;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,mBAApB,EAAyCC,mBAAmB,IAAIC,UAAhE,EAA4EC,sBAAsB,IAAIC,aAAtG,QAA2H,YAA3H;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B,C,CACA;;AACA,IAAMC,kBAAkB,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,SAAhC,EAA2C,QAA3C,EAAqD,YAArD,EAAmE,iBAAnE,EAAsF,iBAAtF,EAAyG,kDAAzG,EAA6JC,IAA7J,CAAkK,GAAlK,CAA3B;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,IAAMC,YAAY,GAAGC,QAAQ,CAACF,IAAI,CAACG,YAAL,CAAkB,UAAlB,KAAiC,EAAlC,EAAsC,EAAtC,CAA7B;;EACA,IAAI,CAACC,MAAM,CAACC,KAAP,CAAaJ,YAAb,CAAL,EAAiC;IAC/B,OAAOA,YAAP;EACD,CAJwB,CAMzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAID,IAAI,CAACM,eAAL,KAAyB,MAAzB,IAAmC,CAACN,IAAI,CAACO,QAAL,KAAkB,OAAlB,IAA6BP,IAAI,CAACO,QAAL,KAAkB,OAA/C,IAA0DP,IAAI,CAACO,QAAL,KAAkB,SAA7E,KAA2FP,IAAI,CAACG,YAAL,CAAkB,UAAlB,MAAkC,IAApK,EAA0K;IACxK,OAAO,CAAP;EACD;;EACD,OAAOH,IAAI,CAACQ,QAAZ;AACD;;AACD,SAASC,kBAAT,CAA4BT,IAA5B,EAAkC;EAChC,IAAIA,IAAI,CAACU,OAAL,KAAiB,OAAjB,IAA4BV,IAAI,CAACW,IAAL,KAAc,OAA9C,EAAuD;IACrD,OAAO,KAAP;EACD;;EACD,IAAI,CAACX,IAAI,CAACY,IAAV,EAAgB;IACd,OAAO,KAAP;EACD;;EACD,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,QAAQ;IAAA,OAAId,IAAI,CAACR,aAAL,CAAmBuB,aAAnB,gCAAuDD,QAAvD,EAAJ;EAAA,CAAzB;;EACA,IAAIE,MAAM,GAAGH,QAAQ,mBAAWb,IAAI,CAACY,IAAhB,iBAArB;;EACA,IAAI,CAACI,MAAL,EAAa;IACXA,MAAM,GAAGH,QAAQ,mBAAWb,IAAI,CAACY,IAAhB,SAAjB;EACD;;EACD,OAAOI,MAAM,KAAKhB,IAAlB;AACD;;AACD,SAASiB,+BAAT,CAAyCjB,IAAzC,EAA+C;EAC7C,IAAIA,IAAI,CAACkB,QAAL,IAAiBlB,IAAI,CAACU,OAAL,KAAiB,OAAjB,IAA4BV,IAAI,CAACW,IAAL,KAAc,QAA3D,IAAuEF,kBAAkB,CAACT,IAAD,CAA7F,EAAqG;IACnG,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD;;AACD,SAASmB,kBAAT,CAA4BC,IAA5B,EAAkC;EAChC,IAAMC,eAAe,GAAG,EAAxB;EACA,IAAMC,eAAe,GAAG,EAAxB;EACAC,KAAK,CAACC,IAAN,CAAWJ,IAAI,CAACK,gBAAL,CAAsB5B,kBAAtB,CAAX,EAAsD6B,OAAtD,CAA8D,UAAC1B,IAAD,EAAO2B,CAAP,EAAa;IACzE,IAAMC,YAAY,GAAG7B,WAAW,CAACC,IAAD,CAAhC;;IACA,IAAI4B,YAAY,KAAK,CAAC,CAAlB,IAAuB,CAACX,+BAA+B,CAACjB,IAAD,CAA3D,EAAmE;MACjE;IACD;;IACD,IAAI4B,YAAY,KAAK,CAArB,EAAwB;MACtBP,eAAe,CAACQ,IAAhB,CAAqB7B,IAArB;IACD,CAFD,MAEO;MACLsB,eAAe,CAACO,IAAhB,CAAqB;QACnBC,aAAa,EAAEH,CADI;QAEnBnB,QAAQ,EAAEoB,YAFS;QAGnB5B,IAAI,EAAEA;MAHa,CAArB;IAKD;EACF,CAdD;EAeA,OAAOsB,eAAe,CAACS,IAAhB,CAAqB,UAACC,CAAD,EAAIC,CAAJ;IAAA,OAAUD,CAAC,CAACxB,QAAF,KAAeyB,CAAC,CAACzB,QAAjB,GAA4BwB,CAAC,CAACF,aAAF,GAAkBG,CAAC,CAACH,aAAhD,GAAgEE,CAAC,CAACxB,QAAF,GAAayB,CAAC,CAACzB,QAAzF;EAAA,CAArB,EAAwH0B,GAAxH,CAA4H,UAAAF,CAAC;IAAA,OAAIA,CAAC,CAAChC,IAAN;EAAA,CAA7H,EAAyImC,MAAzI,CAAgJd,eAAhJ,CAAP;AACD;;AACD,SAASe,gBAAT,GAA4B;EAC1B,OAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,IACEC,QADF,GAQID,KARJ,CACEC,QADF;EAAA,4BAQID,KARJ,CAEEE,gBAFF;EAAA,IAEEA,gBAFF,sCAEqB,KAFrB;EAAA,4BAQIF,KARJ,CAGEG,mBAHF;EAAA,IAGEA,mBAHF,sCAGwB,KAHxB;EAAA,4BAQIH,KARJ,CAIEI,mBAJF;EAAA,IAIEA,mBAJF,sCAIwB,KAJxB;EAAA,yBAQIJ,KARJ,CAKEK,WALF;EAAA,IAKEA,WALF,mCAKgBxB,kBALhB;EAAA,uBAQImB,KARJ,CAMEM,SANF;EAAA,IAMEA,SANF,iCAMcR,gBANd;EAAA,IAOES,IAPF,GAQIP,KARJ,CAOEO,IAPF;EASA,IAAMC,sBAAsB,GAAG7D,KAAK,CAAC8D,MAAN,CAAa,KAAb,CAA/B;EACA,IAAMC,aAAa,GAAG/D,KAAK,CAAC8D,MAAN,CAAa,IAAb,CAAtB;EACA,IAAME,WAAW,GAAGhE,KAAK,CAAC8D,MAAN,CAAa,IAAb,CAApB;EACA,IAAMG,aAAa,GAAGjE,KAAK,CAAC8D,MAAN,CAAa,IAAb,CAAtB;EACA,IAAMI,qBAAqB,GAAGlE,KAAK,CAAC8D,MAAN,CAAa,IAAb,CAA9B,CAdwB,CAexB;EACA;;EACA,IAAMK,SAAS,GAAGnE,KAAK,CAAC8D,MAAN,CAAa,KAAb,CAAlB;EACA,IAAMM,OAAO,GAAGpE,KAAK,CAAC8D,MAAN,CAAa,IAAb,CAAhB,CAlBwB,CAmBxB;;EACA,IAAMO,SAAS,GAAGhE,UAAU,CAACiD,QAAQ,CAACgB,GAAV,EAAeF,OAAf,CAA5B;EACA,IAAMG,WAAW,GAAGvE,KAAK,CAAC8D,MAAN,CAAa,IAAb,CAApB;EACA9D,KAAK,CAACwE,SAAN,CAAgB,YAAM;IACpB;IACA,IAAI,CAACZ,IAAD,IAAS,CAACQ,OAAO,CAACK,OAAtB,EAA+B;MAC7B;IACD;;IACDN,SAAS,CAACM,OAAV,GAAoB,CAAClB,gBAArB;EACD,CAND,EAMG,CAACA,gBAAD,EAAmBK,IAAnB,CANH;EAOA5D,KAAK,CAACwE,SAAN,CAAgB,YAAM;IACpB;IACA,IAAI,CAACZ,IAAD,IAAS,CAACQ,OAAO,CAACK,OAAtB,EAA+B;MAC7B;IACD;;IACD,IAAMC,GAAG,GAAGnE,aAAa,CAAC6D,OAAO,CAACK,OAAT,CAAzB;;IACA,IAAI,CAACL,OAAO,CAACK,OAAR,CAAgBE,QAAhB,CAAyBD,GAAG,CAACE,aAA7B,CAAL,EAAkD;MAChD,IAAI,CAACR,OAAO,CAACK,OAAR,CAAgBI,YAAhB,CAA6B,UAA7B,CAAL,EAA+C;QAC7C,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;UACzCC,OAAO,CAACC,KAAR,CAAc,CAAC,oDAAD,EAAuD,gDAAgD,gDAAvG,EAAyJrE,IAAzJ,CAA8J,IAA9J,CAAd;QACD;;QACDuD,OAAO,CAACK,OAAR,CAAgBU,YAAhB,CAA6B,UAA7B,EAAyC,IAAzC;MACD;;MACD,IAAIhB,SAAS,CAACM,OAAd,EAAuB;QACrBL,OAAO,CAACK,OAAR,CAAgBW,KAAhB;MACD;IACF;;IACD,OAAO,YAAM;MACX;MACA,IAAI,CAAC3B,mBAAL,EAA0B;QACxB;QACA;QACA;QACA;QACA,IAAIQ,aAAa,CAACQ,OAAd,IAAyBR,aAAa,CAACQ,OAAd,CAAsBW,KAAnD,EAA0D;UACxDvB,sBAAsB,CAACY,OAAvB,GAAiC,IAAjC;UACAR,aAAa,CAACQ,OAAd,CAAsBW,KAAtB;QACD;;QACDnB,aAAa,CAACQ,OAAd,GAAwB,IAAxB;MACD;IACF,CAbD,CAjBoB,CA+BpB;IACA;IACA;EACD,CAlCD,EAkCG,CAACb,IAAD,CAlCH;EAmCA5D,KAAK,CAACwE,SAAN,CAAgB,YAAM;IACpB;IACA,IAAI,CAACZ,IAAD,IAAS,CAACQ,OAAO,CAACK,OAAtB,EAA+B;MAC7B;IACD;;IACD,IAAMC,GAAG,GAAGnE,aAAa,CAAC6D,OAAO,CAACK,OAAT,CAAzB;;IACA,IAAMY,SAAS,GAAG,SAAZA,SAAY,CAAAC,WAAW,EAAI;MAC/Bf,WAAW,CAACE,OAAZ,GAAsBa,WAAtB;;MACA,IAAI9B,mBAAmB,IAAI,CAACG,SAAS,EAAjC,IAAuC2B,WAAW,CAACC,GAAZ,KAAoB,KAA/D,EAAsE;QACpE;MACD,CAJ8B,CAM/B;MACA;;;MACA,IAAIb,GAAG,CAACE,aAAJ,KAAsBR,OAAO,CAACK,OAA9B,IAAyCa,WAAW,CAACE,QAAzD,EAAmE;QACjE;QACA;QACA3B,sBAAsB,CAACY,OAAvB,GAAiC,IAAjC;;QACA,IAAIT,WAAW,CAACS,OAAhB,EAAyB;UACvBT,WAAW,CAACS,OAAZ,CAAoBW,KAApB;QACD;MACF;IACF,CAhBD;;IAiBA,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;MACpB,IAAMC,WAAW,GAAGtB,OAAO,CAACK,OAA5B,CADoB,CAGpB;MACA;;MACA,IAAIiB,WAAW,KAAK,IAApB,EAA0B;QACxB;MACD;;MACD,IAAI,CAAChB,GAAG,CAACiB,QAAJ,EAAD,IAAmB,CAAChC,SAAS,EAA7B,IAAmCE,sBAAsB,CAACY,OAA9D,EAAuE;QACrEZ,sBAAsB,CAACY,OAAvB,GAAiC,KAAjC;QACA;MACD,CAXmB,CAapB;;;MACA,IAAIiB,WAAW,CAACf,QAAZ,CAAqBD,GAAG,CAACE,aAAzB,CAAJ,EAA6C;QAC3C;MACD,CAhBmB,CAkBpB;;;MACA,IAAIpB,mBAAmB,IAAIkB,GAAG,CAACE,aAAJ,KAAsBb,aAAa,CAACU,OAA3D,IAAsEC,GAAG,CAACE,aAAJ,KAAsBZ,WAAW,CAACS,OAA5G,EAAqH;QACnH;MACD,CArBmB,CAuBpB;;;MACA,IAAIC,GAAG,CAACE,aAAJ,KAAsBV,qBAAqB,CAACO,OAAhD,EAAyD;QACvDP,qBAAqB,CAACO,OAAtB,GAAgC,IAAhC;MACD,CAFD,MAEO,IAAIP,qBAAqB,CAACO,OAAtB,KAAkC,IAAtC,EAA4C;QACjD;MACD;;MACD,IAAI,CAACN,SAAS,CAACM,OAAf,EAAwB;QACtB;MACD;;MACD,IAAImB,QAAQ,GAAG,EAAf;;MACA,IAAIlB,GAAG,CAACE,aAAJ,KAAsBb,aAAa,CAACU,OAApC,IAA+CC,GAAG,CAACE,aAAJ,KAAsBZ,WAAW,CAACS,OAArF,EAA8F;QAC5FmB,QAAQ,GAAGlC,WAAW,CAACU,OAAO,CAACK,OAAT,CAAtB;MACD,CAnCmB,CAqCpB;MACA;;;MACA,IAAImB,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;QACvB,IAAIC,oBAAJ,EAA0BC,qBAA1B;;QACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,CAAC,CAACH,oBAAoB,GAAGvB,WAAW,CAACE,OAApC,KAAgD,IAAhD,GAAuD,KAAK,CAA5D,GAAgEqB,oBAAoB,CAACN,QAAtF,KAAmG,CAAC,CAACO,qBAAqB,GAAGxB,WAAW,CAACE,OAArC,KAAiD,IAAjD,GAAwD,KAAK,CAA7D,GAAiEsB,qBAAqB,CAACR,GAAxF,MAAiG,KAArM,CAA1B;QACA,IAAMW,SAAS,GAAGN,QAAQ,CAAC,CAAD,CAA1B;QACA,IAAMO,aAAa,GAAGP,QAAQ,CAACA,QAAQ,CAACC,MAAT,GAAkB,CAAnB,CAA9B;;QACA,IAAI,OAAOK,SAAP,KAAqB,QAArB,IAAiC,OAAOC,aAAP,KAAyB,QAA9D,EAAwE;UACtE,IAAIH,UAAJ,EAAgB;YACdG,aAAa,CAACf,KAAd;UACD,CAFD,MAEO;YACLc,SAAS,CAACd,KAAV;UACD;QACF,CAXsB,CAYvB;;MACD,CAbD,MAaO;QACLM,WAAW,CAACN,KAAZ;MACD;IACF,CAvDD;;IAwDAV,GAAG,CAAC0B,gBAAJ,CAAqB,SAArB,EAAgCX,OAAhC;IACAf,GAAG,CAAC0B,gBAAJ,CAAqB,SAArB,EAAgCf,SAAhC,EAA2C,IAA3C,EAhFoB,CAkFpB;IACA;IACA;IACA;IACA;IACA;;IACA,IAAMgB,QAAQ,GAAGC,WAAW,CAAC,YAAM;MACjC,IAAI5B,GAAG,CAACE,aAAJ,IAAqBF,GAAG,CAACE,aAAJ,CAAkBnD,OAAlB,KAA8B,MAAvD,EAA+D;QAC7DgE,OAAO;MACR;IACF,CAJ2B,EAIzB,EAJyB,CAA5B;IAKA,OAAO,YAAM;MACXc,aAAa,CAACF,QAAD,CAAb;MACA3B,GAAG,CAAC8B,mBAAJ,CAAwB,SAAxB,EAAmCf,OAAnC;MACAf,GAAG,CAAC8B,mBAAJ,CAAwB,SAAxB,EAAmCnB,SAAnC,EAA8C,IAA9C;IACD,CAJD;EAKD,CAlGD,EAkGG,CAAC9B,gBAAD,EAAmBC,mBAAnB,EAAwCC,mBAAxC,EAA6DE,SAA7D,EAAwEC,IAAxE,EAA8EF,WAA9E,CAlGH;;EAmGA,IAAM+C,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;IACvB,IAAIzC,aAAa,CAACQ,OAAd,KAA0B,IAA9B,EAAoC;MAClCR,aAAa,CAACQ,OAAd,GAAwBiC,KAAK,CAACC,aAA9B;IACD;;IACDxC,SAAS,CAACM,OAAV,GAAoB,IAApB;IACAP,qBAAqB,CAACO,OAAtB,GAAgCiC,KAAK,CAACE,MAAtC;IACA,IAAMC,oBAAoB,GAAGvD,QAAQ,CAACD,KAAT,CAAeoD,OAA5C;;IACA,IAAII,oBAAJ,EAA0B;MACxBA,oBAAoB,CAACH,KAAD,CAApB;IACD;EACF,CAVD;;EAWA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAJ,KAAK,EAAI;IACnC,IAAIzC,aAAa,CAACQ,OAAd,KAA0B,IAA9B,EAAoC;MAClCR,aAAa,CAACQ,OAAd,GAAwBiC,KAAK,CAACC,aAA9B;IACD;;IACDxC,SAAS,CAACM,OAAV,GAAoB,IAApB;EACD,CALD;;EAMA,OAAO,aAAa9D,KAAK,CAACX,KAAK,CAAC+G,QAAP,EAAiB;IACxCzD,QAAQ,EAAE,CAAC,aAAa7C,IAAI,CAAC,KAAD,EAAQ;MAClCc,QAAQ,EAAEqC,IAAI,GAAG,CAAH,GAAO,CAAC,CADY;MAElC6C,OAAO,EAAEK,mBAFyB;MAGlCxC,GAAG,EAAEP,aAH6B;MAIlC,eAAe;IAJmB,CAAR,CAAlB,EAKN,aAAa/D,KAAK,CAACgH,YAAN,CAAmB1D,QAAnB,EAA6B;MAC5CgB,GAAG,EAAED,SADuC;MAE5CoC,OAAO,EAAPA;IAF4C,CAA7B,CALP,EAQN,aAAahG,IAAI,CAAC,KAAD,EAAQ;MAC3Bc,QAAQ,EAAEqC,IAAI,GAAG,CAAH,GAAO,CAAC,CADK;MAE3B6C,OAAO,EAAEK,mBAFkB;MAG3BxC,GAAG,EAAEN,WAHsB;MAI3B,eAAe;IAJY,CAAR,CARX;EAD8B,CAAjB,CAAzB;AAgBD;;AACDc,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC5B,SAAS,CAAC6D;AAAU;AAApB,EAA6C;EACnF;EACA;EACA;EACA;;EACA;AACF;AACA;EACE3D,QAAQ,EAAEnD,mBARyE;;EASnF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEoD,gBAAgB,EAAEtD,SAAS,CAACiH,IAlBuD;;EAmBnF;AACF;AACA;AACA;AACA;AACA;AACA;EACE1D,mBAAmB,EAAEvD,SAAS,CAACiH,IA1BoD;;EA2BnF;AACF;AACA;AACA;AACA;EACEzD,mBAAmB,EAAExD,SAAS,CAACiH,IAhCoD;;EAiCnF;AACF;AACA;AACA;AACA;EACExD,WAAW,EAAEzD,SAAS,CAACkH,IAtC4D;;EAuCnF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExD,SAAS,EAAE1D,SAAS,CAACkH,IAhD8D;;EAiDnF;AACF;AACA;EACEvD,IAAI,EAAE3D,SAAS,CAACiH,IAAV,CAAeE;AApD8D,CAArF,GAqDI,KAAK,CArDT;;AAsDA,IAAItC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzC;EACA5B,SAAS,CAAC,cAAc,EAAf,CAAT,GAA8BlD,SAAS,CAACkD,SAAS,CAAC6D,SAAX,CAAvC;AACD;;AACD,SAAS7D,SAAT"},"metadata":{},"sourceType":"module"}