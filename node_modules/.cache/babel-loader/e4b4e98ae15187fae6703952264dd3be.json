{"ast":null,"code":"import _objectWithoutProperties from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n    _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n    _excluded3 = [\"strategy\"],\n    _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n    _excluded5 = [\"apply\"];\nimport { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n      floating = _ref.floating;\n  var sideAxis = getSideAxis(placement);\n  var alignmentAxis = getAlignmentAxis(placement);\n  var alignLength = getAxisLength(alignmentAxis);\n  var side = getSide(placement);\n  var isVertical = sideAxis === 'y';\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  var coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            validMiddleware = middleware.filter(Boolean);\n            _context.next = 4;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n\n          case 4:\n            rtl = _context.sent;\n            _context.next = 7;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 7:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n\n          case 13:\n            if (!(i < validMiddleware.length)) {\n              _context.next = 45;\n              break;\n            }\n\n            _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n            _context.next = 17;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n\n          case 17:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 42;\n              break;\n            }\n\n            resetCount++;\n\n            if (!(typeof reset === 'object')) {\n              _context.next = 41;\n              break;\n            }\n\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n\n            if (!reset.rects) {\n              _context.next = 38;\n              break;\n            }\n\n            if (!(reset.rects === true)) {\n              _context.next = 36;\n              break;\n            }\n\n            _context.next = 33;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 33:\n            _context.t0 = _context.sent;\n            _context.next = 37;\n            break;\n\n          case 36:\n            _context.t0 = reset.rects;\n\n          case 37:\n            rects = _context.t0;\n\n          case 38:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n\n          case 41:\n            i = -1;\n\n          case 42:\n            i++;\n            _context.next = 13;\n            break;\n\n          case 45:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n\n          case 46:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate8, _evaluate8$boundary, boundary, _evaluate8$rootBounda, rootBoundary, _evaluate8$elementCon, elementContext, _evaluate8$altBoundar, altBoundary, _evaluate8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n\n            x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n            _evaluate8 = evaluate(options, state), _evaluate8$boundary = _evaluate8.boundary, boundary = _evaluate8$boundary === void 0 ? 'clippingAncestors' : _evaluate8$boundary, _evaluate8$rootBounda = _evaluate8.rootBoundary, rootBoundary = _evaluate8$rootBounda === void 0 ? 'viewport' : _evaluate8$rootBounda, _evaluate8$elementCon = _evaluate8.elementContext, elementContext = _evaluate8$elementCon === void 0 ? 'floating' : _evaluate8$elementCon, _evaluate8$altBoundar = _evaluate8.altBoundary, altBoundary = _evaluate8$altBoundar === void 0 ? false : _evaluate8$altBoundar, _evaluate8$padding = _evaluate8.padding, padding = _evaluate8$padding === void 0 ? 0 : _evaluate8$padding;\n            paddingObject = getPaddingObject(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n\n          case 15:\n            _context10.t3 = true;\n\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n\n          case 20:\n            _context10.t5 = element.contextElement;\n\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n\n          case 24:\n            _context10.t5 = _context10.sent;\n\n          case 25:\n            _context10.t4 = _context10.t5;\n\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 38;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n          case 38:\n            offsetParent = _context10.sent;\n            _context10.next = 41;\n            return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n\n          case 41:\n            if (!_context10.sent) {\n              _context10.next = 50;\n              break;\n            }\n\n            _context10.next = 44;\n            return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n\n          case 44:\n            _context10.t13 = _context10.sent;\n\n            if (_context10.t13) {\n              _context10.next = 47;\n              break;\n            }\n\n            _context10.t13 = {\n              x: 1,\n              y: 1\n            };\n\n          case 47:\n            _context10.t12 = _context10.t13;\n            _context10.next = 51;\n            break;\n\n          case 50:\n            _context10.t12 = {\n              x: 1,\n              y: 1\n            };\n\n          case 51:\n            offsetScale = _context10.t12;\n            _context10.t14 = rectToClientRect;\n\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 59;\n              break;\n            }\n\n            _context10.next = 56;\n            return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n              elements: elements,\n              rect: rect,\n              offsetParent: offsetParent,\n              strategy: strategy\n            });\n\n          case 56:\n            _context10.t15 = _context10.sent;\n            _context10.next = 60;\n            break;\n\n          case 59:\n            _context10.t15 = rect;\n\n          case 60:\n            _context10.t16 = _context10.t15;\n            elementClientRect = (0, _context10.t14)(_context10.t16);\n            return _context10.abrupt(\"return\", {\n              top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n              bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n              left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n              right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n            });\n\n          case 63:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\n\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _objectSpread3, _ref4;\n\n        var x, y, placement, rects, platform, elements, middlewareData, _ref3, element, _ref3$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements, middlewareData = state.middlewareData; // Since `element` is required, we don't Partial<> the type.\n\n                _ref3 = evaluate(options, state) || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n\n                if (!(element == null)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 4:\n                paddingObject = getPaddingObject(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getAlignmentAxis(placement);\n                length = getAxisLength(axis);\n                _context2.next = 10;\n                return platform.getDimensions(element);\n\n              case 10:\n                arrowDimensions = _context2.sent;\n                isYAxis = axis === 'y';\n                minProp = isYAxis ? 'top' : 'left';\n                maxProp = isYAxis ? 'bottom' : 'right';\n                clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 19;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n\n              case 19:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n\n                _context2.t0 = !clientSize;\n\n                if (_context2.t0) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                _context2.next = 25;\n                return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n\n              case 25:\n                _context2.t0 = !_context2.sent;\n\n              case 26:\n                if (!_context2.t0) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                clientSize = elements.floating[clientProp] || rects.floating[length];\n\n              case 28:\n                centerToReference = endDiff / 2 - startDiff / 2; // If the padding is large enough that it causes the arrow to no longer be\n                // centered, modify the padding so that it is centered.\n\n                largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n                minPadding = min(paddingObject[minProp], largestPossiblePadding);\n                maxPadding = min(paddingObject[maxProp], largestPossiblePadding); // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds.\n\n                min$1 = minPadding;\n                max = clientSize - arrowDimensions[length] - maxPadding;\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = clamp(min$1, center, max); // If the reference is small enough that the arrow's padding causes it to\n                // to point to nothing for an aligned placement, adjust the offset of the\n                // floating element itself. To ensure `shift()` continues to take action,\n                // a single reset is performed when this is true.\n\n                shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n                alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] + alignmentOffset), _defineProperty(_ref4, \"data\", _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, axis, offset), _defineProperty(_objectSpread3, \"centerOffset\", center - offset - alignmentOffset), _objectSpread3), shouldAddOffset && {\n                  alignmentOffset: alignmentOffset\n                })), _defineProperty(_ref4, \"reset\", shouldAddOffset), _ref4));\n\n              case 39:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _evaluate, _evaluate$crossAxis, crossAxis, alignment, _evaluate$allowedPlac, allowedPlacements, _evaluate$autoAlignme, autoAlignment, detectOverflowOptions, placements$1, overflow, currentIndex, currentPlacement, alignmentSides, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n                _evaluate = evaluate(options, state), _evaluate$crossAxis = _evaluate.crossAxis, crossAxis = _evaluate$crossAxis === void 0 ? false : _evaluate$crossAxis, alignment = _evaluate.alignment, _evaluate$allowedPlac = _evaluate.allowedPlacements, allowedPlacements = _evaluate$allowedPlac === void 0 ? placements : _evaluate$allowedPlac, _evaluate$autoAlignme = _evaluate.autoAlignment, autoAlignment = _evaluate$autoAlignme === void 0 ? true : _evaluate$autoAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);\n                placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n                _context3.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n                currentPlacement = placements$1[currentIndex];\n\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {});\n\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 15:\n                _context3.t3 = _context3.sent;\n                alignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  reset: {\n                    placement: placements$1[0]\n                  }\n                });\n\n              case 19:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n                allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements$1[currentIndex + 1]; // There are more placements to check.\n\n                if (!nextPlacement) {\n                  _context3.next = 24;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 24:\n                placementsSortedByMostSpace = allOverflows.map(function (d) {\n                  var alignment = getAlignment(d.placement);\n                  return [d.placement, alignment && crossAxis ? // Check along the mainAxis and main crossAxis side.\n                  d.overflows.slice(0, 2).reduce(function (acc, v) {\n                    return acc + v;\n                  }, 0) : // Check only the mainAxis.\n                  d.overflows[0], d.overflows];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                });\n                placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                  return d[2].slice(0, // Aligned placements should not check their opposite crossAxis\n                  // side.\n                  getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                    return v <= 0;\n                  });\n                });\n                resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 29:\n                return _context3.abrupt(\"return\", {});\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$arrow, _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate2$fallbackSt, fallbackStrategy, _evaluate2$fallbackAx, fallbackAxisSideDirection, _evaluate2$flipAlignm, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _sides, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n                _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? true : _evaluate2$crossAxis, specifiedFallbackPlacements = _evaluate2.fallbackPlacements, _evaluate2$fallbackSt = _evaluate2.fallbackStrategy, fallbackStrategy = _evaluate2$fallbackSt === void 0 ? 'bestFit' : _evaluate2$fallbackSt, _evaluate2$fallbackAx = _evaluate2.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate2$fallbackAx === void 0 ? 'none' : _evaluate2$fallbackAx, _evaluate2$flipAlignm = _evaluate2.flipAlignment, flipAlignment = _evaluate2$flipAlignm === void 0 ? true : _evaluate2$flipAlignm, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2); // If a reset by the arrow was caused due to an alignment offset being\n                // added, we should skip any logic now since `flip()` has already done its\n                // work.\n                // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n\n                if (!((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {});\n\n              case 4:\n                side = getSide(placement);\n                isBasePlacement = getSide(initialPlacement) === initialPlacement;\n                _context4.next = 8;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 8:\n                rtl = _context4.sent;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n\n                if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                  fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n                }\n\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 14;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 14:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n\n                if (checkCrossAxis) {\n                  _sides = getAlignmentSides(placement, rects, rtl);\n                  overflows.push(overflow[_sides[0]], overflow[_sides[1]]);\n                }\n\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]); // One or more sides is overflowing.\n\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 37;\n                  break;\n                }\n\n                nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                nextPlacement = placements[nextIndex];\n\n                if (!nextPlacement) {\n                  _context4.next = 25;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 25:\n                // First, find the candidates that fit on the mainAxis side of overflow,\n                // then find the placement that fits the best on the main crossAxis side.\n                resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                  return d.overflows[0] <= 0;\n                }).sort(function (a, b) {\n                  return a.overflows[1] - b.overflows[1];\n                })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n\n                if (resetPlacement) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                _context4.t0 = fallbackStrategy;\n                _context4.next = _context4.t0 === 'bestFit' ? 30 : _context4.t0 === 'initialPlacement' ? 33 : 35;\n                break;\n\n              case 30:\n                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                  return [d.placement, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$map$so[0];\n\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n\n                return _context4.abrupt(\"break\", 35);\n\n              case 33:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 35);\n\n              case 35:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 37;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 37:\n                return _context4.abrupt(\"return\", {});\n\n              case 38:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, _evaluate3, _evaluate3$strategy, strategy, detectOverflowOptions, overflow, offsets, _overflow, _offsets;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rects = state.rects;\n                _evaluate3 = evaluate(options, state), _evaluate3$strategy = _evaluate3.strategy, strategy = _evaluate3$strategy === void 0 ? 'referenceHidden' : _evaluate3$strategy, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n                break;\n\n              case 5:\n                _context5.next = 7;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n\n              case 7:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n\n              case 10:\n                _context5.next = 12;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n\n              case 12:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n\n              case 15:\n                return _context5.abrupt(\"return\", {});\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\n\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n\n    prevRect = rect;\n  }\n\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _evaluate4, _evaluate4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined.\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    // Find the first rect in which the point is fully inside.\n                    return clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    }) || fallback;\n                  } // There are 2 or more connected rects.\n\n\n                  if (clientRects.length >= 2) {\n                    if (getSideAxis(placement) === 'y') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n\n                      var _left = isTop ? firstRect.left : lastRect.left;\n\n                      var _right = isTop ? firstRect.right : lastRect.right;\n\n                      var _width = _right - _left;\n\n                      var _height = _bottom - _top;\n\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n\n                  return fallback;\n                };\n\n                placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n\n                _evaluate4 = evaluate(options, state), _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 2 : _evaluate4$padding, x = _evaluate4.x, y = _evaluate4.y;\n                _context6.t0 = Array;\n                _context6.next = 6;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n\n              case 6:\n                _context6.t1 = _context6.sent;\n\n                if (_context6.t1) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.t1 = [];\n\n              case 9:\n                _context6.t2 = _context6.t1;\n                nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n                clientRects = getRectsByLine(nativeClientRects);\n                fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n                paddingObject = getPaddingObject(padding);\n                _context6.next = 16;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n\n              case 16:\n                resetRects = _context6.sent;\n\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context6.next = 19;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n\n              case 19:\n                return _context6.abrupt(\"return\", {});\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n}; // For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\n\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(state, options) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = state.placement, platform = state.platform, elements = state.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getSideAxis(placement) === 'y';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = evaluate(options, state);\n            _ref6 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : _objectSpread({\n              mainAxis: 0,\n              crossAxis: 0,\n              alignmentAxis: null\n            }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\n\nvar offset = function offset(options) {\n  if (options === void 0) {\n    options = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _middlewareData$offse, _middlewareData$arrow, x, y, placement, middlewareData, diffCoords;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement, middlewareData = state.middlewareData;\n                _context7.next = 3;\n                return convertValueToCoords(state, options);\n\n              case 3:\n                diffCoords = _context7.sent;\n\n                if (!(placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {});\n\n              case 6:\n                return _context7.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: _objectSpread(_objectSpread({}, diffCoords), {}, {\n                    placement: placement\n                  })\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread4;\n\n        var x, y, placement, _evaluate5, _evaluate5$mainAxis, checkMainAxis, _evaluate5$crossAxis, checkCrossAxis, _evaluate5$limiter, limiter, detectOverflowOptions, coords, overflow, crossAxis, mainAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement;\n                _evaluate5 = evaluate(options, state), _evaluate5$mainAxis = _evaluate5.mainAxis, checkMainAxis = _evaluate5$mainAxis === void 0 ? true : _evaluate5$mainAxis, _evaluate5$crossAxis = _evaluate5.crossAxis, checkCrossAxis = _evaluate5$crossAxis === void 0 ? false : _evaluate5$crossAxis, _evaluate5$limiter = _evaluate5.limiter, limiter = _evaluate5$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                        y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _evaluate5$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate5, _excluded4);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context8.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 5:\n                overflow = _context8.sent;\n                crossAxis = getSideAxis(getSide(placement));\n                mainAxis = getOppositeAxis(crossAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = clamp(_min, mainAxisCoord, _max);\n                }\n\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = clamp(_min2, crossAxisCoord, _max2);\n                }\n\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, mainAxis, mainAxisCoord), _defineProperty(_objectSpread4, crossAxis, crossAxisCoord), _objectSpread4)));\n                return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n\n      var x = state.x,\n          y = state.y,\n          placement = state.placement,\n          rects = state.rects,\n          middlewareData = state.middlewareData;\n\n      var _evaluate6 = evaluate(options, state),\n          _evaluate6$offset = _evaluate6.offset,\n          offset = _evaluate6$offset === void 0 ? 0 : _evaluate6$offset,\n          _evaluate6$mainAxis = _evaluate6.mainAxis,\n          checkMainAxis = _evaluate6$mainAxis === void 0 ? true : _evaluate6$mainAxis,\n          _evaluate6$crossAxis = _evaluate6.crossAxis,\n          checkCrossAxis = _evaluate6$crossAxis === void 0 ? true : _evaluate6$crossAxis;\n\n      var coords = {\n        x: x,\n        y: y\n      };\n      var crossAxis = getSideAxis(placement);\n      var mainAxis = getOppositeAxis(crossAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = evaluate(offset, state);\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var placement, rects, platform, elements, _evaluate7, _evaluate7$apply, apply, detectOverflowOptions, overflow, side, alignment, isYAxis, _rects$floating, width, height, heightSide, widthSide, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, maximumClippingWidth, maximumClippingHeight, xMin, xMax, yMin, yMax, nextDimensions;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n                _evaluate7 = evaluate(options, state), _evaluate7$apply = _evaluate7.apply, apply = _evaluate7$apply === void 0 ? function () {} : _evaluate7$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate7, _excluded5);\n                _context9.next = 4;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 4:\n                overflow = _context9.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n                isYAxis = getSideAxis(placement) === 'y';\n                _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context9.next = 28;\n                  break;\n                }\n\n                heightSide = side;\n                _context9.t0 = alignment;\n                _context9.next = 14;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 14:\n                if (!_context9.sent) {\n                  _context9.next = 18;\n                  break;\n                }\n\n                _context9.t1 = 'start';\n                _context9.next = 19;\n                break;\n\n              case 18:\n                _context9.t1 = 'end';\n\n              case 19:\n                _context9.t2 = _context9.t1;\n\n                if (!(_context9.t0 === _context9.t2)) {\n                  _context9.next = 24;\n                  break;\n                }\n\n                _context9.t3 = 'left';\n                _context9.next = 25;\n                break;\n\n              case 24:\n                _context9.t3 = 'right';\n\n              case 25:\n                widthSide = _context9.t3;\n                _context9.next = 30;\n                break;\n\n              case 28:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n\n              case 30:\n                overflowAvailableHeight = height - overflow[heightSide];\n                overflowAvailableWidth = width - overflow[widthSide];\n                noShift = !state.middlewareData.shift;\n                availableHeight = overflowAvailableHeight;\n                availableWidth = overflowAvailableWidth;\n\n                if (isYAxis) {\n                  maximumClippingWidth = width - overflow.left - overflow.right;\n                  availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n                } else {\n                  maximumClippingHeight = height - overflow.top - overflow.bottom;\n                  availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n                }\n\n                if (noShift && !alignment) {\n                  xMin = max(overflow.left, 0);\n                  xMax = max(overflow.right, 0);\n                  yMin = max(overflow.top, 0);\n                  yMax = max(overflow.bottom, 0);\n\n                  if (isYAxis) {\n                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                  } else {\n                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                  }\n                }\n\n                _context9.next = 39;\n                return apply(_objectSpread(_objectSpread({}, state), {}, {\n                  availableWidth: availableWidth,\n                  availableHeight: availableHeight\n                }));\n\n              case 39:\n                _context9.next = 41;\n                return platform.getDimensions(elements.floating);\n\n              case 41:\n                nextDimensions = _context9.sent;\n\n                if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                  _context9.next = 44;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n\n              case 44:\n                return _context9.abrupt(\"return\", {});\n\n              case 45:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };","map":{"version":3,"names":["getSideAxis","getAlignmentAxis","getAxisLength","getSide","getAlignment","evaluate","getPaddingObject","rectToClientRect","min","clamp","placements","getAlignmentSides","getOppositeAlignmentPlacement","getOppositePlacement","getExpandedPlacements","getOppositeAxisPlacements","sides","max","getOppositeAxis","computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","side","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","length","name","fn","initialPlacement","elements","nextX","nextY","data","reset","detectOverflow","state","options","boundary","rootBoundary","elementContext","altBoundary","padding","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","rect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","top","bottom","left","right","arrow","axis","getDimensions","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","getPlacementList","alignment","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","crossAxis","detectOverflowOptions","placements$1","undefined","overflow","currentIndex","_middlewareData$autoP","index","currentPlacement","alignmentSides","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","reduce","acc","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","_placementsThatFitOnE","flip","mainAxis","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","_middlewareData$arrow","isBasePlacement","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","_overflowsData$filter","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","getBoundingClientRect","clientRects","find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","nativeClientRects","from","resetRects","convertValueToCoords","mainAxisMulti","includes","crossAxisMulti","rawValue","diffCoords","_middlewareData$offse","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions"],"sources":["/home/kesavan-vel/Documents/Yo/React/E-Commerce/payakanMart/node_modules/@floating-ui/core/dist/floating-ui.core.mjs"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}